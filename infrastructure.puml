@startuml

' Visual settings
skinparam shadowing true
skinparam rectangle {
    BackgroundColor white
    BorderColor black
    RoundCorner 15
}

' Custom colors for each component
skinparam component {
    BackgroundColor<<Frontend>> #ADD8E6
    BackgroundColor<<APIGateway>> #FFD700
    BackgroundColor<<WebSocket>> #FF6347
    BackgroundColor<<ProductCatalog>> #98FB98
    BackgroundColor<<OrderService>> #87CEEB
    BackgroundColor<<AuthS>> #A9DFBF
    BackgroundColor<<Database>> #DDA0DD
    BorderColor black
}

' Define top-to-bottom flow
top to bottom direction

' Frontend Layer
package "Frontend Layer" {
    frame "Frontend\n(SvelteKit)" as FE <<Frontend>>
}

' API Gateway and Serverless Layer
package "API Gateway & Serverless Layer" {
    node "API Gateway\n(Spring Cloud Gateway)" as APIGW <<APIGateway>>
    queue "Real-time Updates\n(WebSocket)" as SF <<WebSocket>>
}

' Backend Services Layer
package "Backend Services Layer" {
    component "Product Catalog Service\n(Java - Spring Boot)" as PCS <<ProductCatalog>>
    component "Order Management Service\n(.NET - ASP.NET Core)" as OMS <<OrderService>>
    component "Auth Service\n(Java - Spring Boot)" as AuthS <<AuthS>>
}

' Database Layer
package "Database Layer" {
    database "PostgreSQL Database" as DB <<Database>>
}

' Connections between components
FE --> APIGW : API Requests
APIGW --> PCS : /products/*
APIGW --> OMS : /orders/*
APIGW --> AuthS : /auth/*

PCS --> DB : Read/Write Products
OMS --> DB : Read/Write Orders
AuthS --> DB : Read/Write Users

OMS --> SF : Trigger Real-time Updates
FE <-- SF : Real-time Updates

@enduml